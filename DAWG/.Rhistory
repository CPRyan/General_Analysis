##### Data Analysis Working Group Meeting 2
setwd("~/Documents/Side/DAWG")
### Download data
library(downloader)
url <- "https://raw.githubusercontent.com/genomicsclass/dagdata/master/inst/extdata/mice_pheno.csv"
filename <- "mice_pheno.csv"
download(url,destfile=filename)
url <- "https://raw.githubusercontent.com/genomicsclass/dagdata/master/inst/extdata/femaleMiceWeights.csv"
filename <- "femaleMiceWeights.csv"
if(!file.exists("femaleMiceWeights.csv")) download(url,destfile=filename)
####### EXCERCISE
url <- "https://raw.githubusercontent.com/genomicsclass/dagdata/master/inst/extdata/babies.txt"
filename <- basename(url)
download(url, destfile=filename)
babies <- read.table("babies.txt", header=TRUE)
# birth weight smoking and non-smoking
bwt.nonsmoke <- filter(babies, smoke==0) %>% select(bwt) %>% unlist
bwt.smoke <- filter(babies, smoke==1) %>% select(bwt) %>% unlist
mean(bwt.nonsmoke)-mean(bwt.smoke)
popsd(bwt.nonsmoke)
popsd(bwt.smoke)
library(dplyr)
# birth weight smoking and non-smoking
bwt.nonsmoke <- filter(babies, smoke==0) %>% select(bwt) %>% unlist
bwt.smoke <- filter(babies, smoke==1) %>% select(bwt) %>% unlist
mean(bwt.nonsmoke)-mean(bwt.smoke)
popsd(bwt.nonsmoke)
popsd(bwt.smoke)
library(rafalib)
# birth weight smoking and non-smoking
bwt.nonsmoke <- filter(babies, smoke==0) %>% select(bwt) %>% unlist
bwt.smoke <- filter(babies, smoke==1) %>% select(bwt) %>% unlist
mean(bwt.nonsmoke)-mean(bwt.smoke)
popsd(bwt.nonsmoke)
popsd(bwt.smoke)
length(bwt.nonsmoke)
dim(babies)
set.seed(1)
head(bwt.nonsmoke)
dat.ns<-bwt.nonsmoke[sample(1:length(bwt.nonsmoke), 25)]
dat.ns
dat.s<-bwt.nonsmoke[sample(1:length(bwt.nonsmoke), 25)]
dat.s
set.seed(1)
dat.ns<-bwt.nonsmoke[sample(1:length(bwt.nonsmoke), 25)]
set.seed(1)
dat.s<-bwt.smoke[sample(1:length(bwt.smoke), 25)]
dat.ns
set.seed(1)
dat.ns<-bwt.nonsmoke[sample(1:length(bwt.nonsmoke), 25)]
dat.ns
set.seed(1)
dat.s<-bwt.smoke[sample(1:length(bwt.smoke), 25)]
dat.s
set.seed(1)
dat.s<-bwt.smoke[sample(1:length(bwt.smoke), 25)]
dat.s
se <- sqrt(
var(dat.s)/length(dat.s) +
var(dat.ns)/length(dat.ns)
)
se
tval<-(mean(dat.s) - mean(dat.ns))/se
tval
pnorm(abs(tval))
righttail <- 1 - pnorm(abs(tval))
lefttail <- pnorm(-abs(tval))
pval <- lefttail + righttail
print(pval)
mean(bwt.nonsmoke)-mean(bwt.smoke)
mean(dat.s) - mean(dat.ns)
pnorm(abs(tval))
pnorm(-abs(tval))
-abs(tval)
abs(tval)
pnorm(-abs(tval))
1 - pnorm(abs(tval))
lefttail + righttail
1-2*(pnorm(abs(tval)))
1-2*(pnorm(1abs(tval)))
1-2*(pnorm(-abs(tval)))
2*(pnorm(-abs(tval)))
mean(dat.s) - mean( dat.ns)
1-0.05/2
qnorm(1-0.05/2)
pnorm(2) - pnorm(-2)
Q <- qnorm(1- 0.05/2)
interval <- c(mean(chow)-Q*se, mean(chow)+Q*se )
dat <- read.csv("mice_pheno.csv")
chowPopulation <- dat[dat$Sex=="F" & dat$Diet=="chow",3]
mu_chow <- mean(chowPopulation)
print(mu_chow)
## can't get whole population so let's estimate!
N <- 30
chow <- sample(chowPopulation,N)
print(mean(chow))# pretty damn close
se <- sd(chow)/sqrt(N)
print(se)
Q <- qnorm(1- 0.05/2)
interval <- c(mean(chow)-Q*se, mean(chow)+Q*se )
interval
interval[1] < mu_chow & interval[2] > mu_chow
Q <- qnorm(1- 0.01/2)
interval <- c(mean(chow)-Q*se, mean(chow)+Q*se )
interval
diff<-mean(dat.s) - mean( dat.ns)
se <- sqrt(
var(dat.s)/length(dat.s) +
var(dat.ns)/length(dat.ns)
)
se
Q*se
qnorm(1- 0.01/2)
?qt
qt(0.01/2,df=2*25-2))
qt(0.01/2,df=2*25-2)
interval <- c(mean(diff)-Q*se, mean(diff)+Q*se )
interval
qt(0.01/2,df=2*25-2)
Q*se # amount to add and subtract from the mean to get a 99% confidence interval
qt(0.01/2,df=2*25-2)
Q*se
Q
Q <- qnorm(1- 0.01/2) # critical value/z multiple/area under normal bounded at 1% and 99th %
Q<-qt(0.01/2,df=2*25-2)
qnorm(1- 0.01/2)
qt(0.01/2,df=2*25-2)
Q <- qnorm(1- 0.01/2) # critical value/z multiple/area under normal bounded at 1% and 99th %
Q*se # amount to add and subtract from the mean to get a 99% confidence interval
Q<-qt(0.01/2,df=2*25-2)
Q*se
2*25-2
set.seed(1)
set.seed(1)
dat.ns.mini<-bwt.nonsmoke[sample(1:length(bwt.nonsmoke), 5)]
set.seed(1)
dat.s,mini<-bwt.smoke[sample(1:length(bwt.smoke), 5)]
set.seed(1)
dat.ns.mini<-bwt.nonsmoke[sample(1:length(bwt.nonsmoke), 5)]
set.seed(1)
dat.s.mini<-bwt.smoke[sample(1:length(bwt.smoke), 5)]
pval<-t.test(data.ns.mini, data.s.mini)
pval<-t.test(dat.ns.mini, dat.s.mini)
pval
set.seed(1)
dat.ns.mini<-bwt.nonsmoke[sample(1:length(bwt.nonsmoke), 5)]
set.seed(1)
dat.s.mini<-bwt.smoke[sample(1:length(bwt.smoke), 5)]
pval<-t.test(dat.ns.mini, dat.s.mini)
pval #0.02038
pval<-t.test(dat.s.mini, dat.ns.mini)
pval #0.02038
pval<-t.test(dat.s.mini, dat.ns.mini)$p.value
pval #0.02038
Ns <- seq(10,200,by=10)
Ns_rep <- rep(Ns, each=10)
Ns_rep
pvalues <- sapply(1:10000, calculatePvalue)
set.seed(1)
calculatePvalue <- function(N) {
dat.ns.mini<-bwt.nonsmoke[sample(1:length(bwt.nonsmoke), 5)]
dat.s.mini<-bwt.smoke[sample(1:length(bwt.smoke), 5)]
pval<-t.test(dat.s.mini, dat.ns.mini)$p.value
}
pvalues <- sapply(1:10000, calculatePvalue)
head(pvalues)
hist(pvalues)
length(which(pvalues<0.05))
length(which(pvalues<0.05))/10000
(length(which(pvalues<0.05))/10000)*100
pvalues <- sapply(rep(5, 10000), calculatePvalue)
calculatePvalue <- function(N) {
dat.ns.mini<-bwt.nonsmoke[sample(1:length(bwt.nonsmoke), 5)]
dat.s.mini<-bwt.smoke[sample(1:length(bwt.smoke), 5)]
pval<-t.test(dat.s.mini, dat.ns.mini)$p.value
}
pvalues <- sapply(rep(5, 10000), calculatePvalue)
(length(which(pvalues<0.05))/10000)*100
set.seed(1)
calculatePvalue <- function(N) {
dat.ns.mini<-bwt.nonsmoke[sample(1:length(bwt.nonsmoke), 5)]
dat.s.mini<-bwt.smoke[sample(1:length(bwt.smoke), 5)]
pval<-t.test(dat.s.mini, dat.ns.mini)$p.value
}
pvalues <- sapply(rep(5, 10000), calculatePvalue)
(length(which(pvalues<0.05))/10000)*100
set.seed(1)
calculatePvalue <- function(N) {
dat.ns.mini<-bwt.nonsmoke[sample(1:length(bwt.nonsmoke), 5)]
dat.s.mini<-bwt.smoke[sample(1:length(bwt.smoke), 5)]
pval<-t.test(dat.s.mini, dat.ns.mini)$p.value
}
pvalues <- sapply(rep(5, 10000), calculatePvalue)
(length(which(pvalues<0.05))/10000)*100
Ns <- seq(30,120,by=30)
Ns
Ns_rep <- rep(Ns, each=10000)
lenght(Ns_rep)
length(Ns_rep)
head(Ns_rep)
Ns
sapply(Ns, function(x){
pvalues <- sapply(rep(x, 10000), calculatePvalue)
(length(which(pvalues<0.05))/10000)*100}
)
set.seed(1)
Ns <- seq(30,120,by=30)
sapply(Ns, function(x){
pvalues <- sapply(rep(x, 10000), calculatePvalue)
(length(which(pvalues<0.05))/10000)*100}
)
set.seed(1)
Ns <- seq(30,120,by=30)
sapply(Ns, function(x){
pvalues <- sapply(rep(x, 10000), calculatePvalue)
(length(which(pvalues<0.01))/10000)*100}
)
x=120
pvalues <- sapply(rep(x, 10000), calculatePvalue)
(length(which(pvalues<0.01))/10000)*100}
(length(which(pvalues<0.05))/10000)*100}
(length(which(pvalues<0.05))/10000)*100
set.seed(1)
calculatePvalue <- function(N) {
dat.ns.mini<-bwt.nonsmoke[sample(1:length(bwt.nonsmoke), N)]
dat.s.mini<-bwt.smoke[sample(1:length(bwt.smoke), N)]
pval<-t.test(dat.s.mini, dat.ns.mini)$p.value
}
pvalues <- sapply(rep(5, 10000), calculatePvalue)
(length(which(pvalues<0.05))/10000)*100
#9.84% of the time
set.seed(1)
Ns <- seq(30,120,by=30)
sapply(Ns, function(x){
pvalues <- sapply(rep(x, 10000), calculatePvalue)
(length(which(pvalues<0.05))/10000)*100
})
Ns
set.seed(1)
Ns <- seq(30,120,by=30)
sapply(Ns, function(x){
pvalues <- sapply(rep(x, 10000), calculatePvalue)
(length(which(pvalues<0.01))/10000)*100}
)
#none?
library(dplyr)
dat <- read.csv("mice_pheno.csv")
controlPopulation <- filter(dat,Sex == "F" & Diet == "chow") %>%
select(Bodyweight) %>% unlist
ls
library(dplyr)
dat <- read.csv("mice_pheno.csv")
controlPopulation <- filter(dat,Sex == "F" & Diet == "chow") %>%
select(Bodyweight) %>% unlist
ttestgenerator <- function(n) {
#note that here we have a false "high fat" group where we actually
#sample from the nonsmokers. this is because we are modeling the *null*
cases <- sample(controlPopulation,n)
controls <- sample(controlPopulation,n)
tstat <- (mean(cases)-mean(controls)) /
sqrt( var(cases)/n + var(controls)/n )
return(tstat)
}
ttests <- replicate(1000, ttestgenerator(10))
hist(ttests)
controls<- rnorm(5000, mean=24, sd=3.5)
ttestgenerator <- function(n, mean=24, sd=3.5) {
cases <- rnorm(n,mean,sd)
controls <- rnorm(n,mean,sd)
tstat <- (mean(cases)-mean(controls)) /
sqrt( var(cases)/n + var(controls)/n )
return(tstat)
}
set.seed(1)
rnorm(5)
t=sqrt(5)*abs(mean(rnorm(5)))/sd(rnorm(5))
t
B<-sapply(1:10000, t=sqrt(5)*abs(mean(rnorm(5)))/sd(rnorm(5)))
B<-sapply(rep(5, 10000), function(n) sqrt(n)*abs(mean(rnorm(n)))/sd(rnorm(n)))
hist(B)
head(B)
t
length(which(B>2))/10000
(length(which(B>2))/10000)*100
1-pt(2,df=4)
B<-sapply(rep(5, 1000), function(n) sqrt(n)*abs(mean(rnorm(n)))/sd(rnorm(n)))
(length(which(B>2))/1000)*100
1-pt(2,df=4)
set.seed(1)
B<-sapply(rep(5, 1000), function(n) sqrt(n)*abs(mean(rnorm(n)))/sd(rnorm(n)))
(length(which(B>2))/1000)*100
?pt
rep(5, 1000)
head(B)
hist(B)
(length(which(B>2))/1000)*100
1-pt(2,df=4)
sqrt(n)*abs(mean(rnorm(n)))/sd(rnorm(n))
B=100
ps = seq(1/(B+1), 1-1/(B+1),len=B)
ps
qt(ps,df=4)
set.seed(1)
B<-sapply(rep(5, 1000), function(n) sqrt(n)*(mean(rnorm(n)))/sd(rnorm(n)))
(length(which(B>2))/1000)*100
1-pt(2,df=4)
t=sqrt(5)*(mean(rnorm(5)))/sd(rnorm(5))
t
set.seed(1)
B<-sapply(rep(5, 1000), function(n) sqrt(n)*(mean(rnorm(n)))/sd(rnorm(n)))
(length(which(B>2))/1000)*100
1-pt(2,df=4)
qqplot(qt(ps,df=4),B,xlim=c(-6,6),ylim=c(-6,6))
abline(0,1)
qqplot(qt(ps,df=4),B)
abline(0,1)
qqplot(qt(ps,df=4),B,xlim=c(-6,6),ylim=c(-6,6))
qqplot(qt(ps,df=4),B,xlim=c(-4,4),ylim=c(-4,4))
abline(0,1)
sep(5:25,5)
seq(5:25,5)
seq(5,25,5)
B=100
ps = seq(1/(B+1), 1-1/(B+1),len=B)
sapply(seq(5,25,5), function(n){
B<-sapply(rep(5, 1000), function(n) sqrt(n)*(mean(rnorm(n)))/sd(rnorm(n)))
qqplot(qt(ps,df=n-1),B)
})
sapply(seq(5,25,5), function(n){
B<-sapply(rep(5, 1000), function(n) sqrt(n)*(mean(rnorm(n)))/sd(rnorm(n)))
qqplot(qt(ps,df=n-1),B)
abline(0,1)
})
sapply(seq(5,25,5), function(n){
B<-sapply(rep(5, 1000), function(n) sqrt(n)*(mean(rnorm(n)))/sd(rnorm(n)))
qqplot(qt(ps,df=n-1),B,xlim=c(-10,10),ylim=c(-10,10))
abline(0,1)
})
dat.ns<-rnorm(n)
dat.s<-rnorm(n)
se <- sqrt(
var(dat.s)/length(dat.s) +
var(dat.ns)/length(dat.ns)
)
#tstat <- diff/se
tval<-(mean(dat.s) - mean(dat.ns))/se
ttestgenerator <- function(n) {
cases <- rnorm(n)
controls <- rnorm(n)
tstat <- (mean(cases)-mean(controls)) /
sqrt( var(cases)/n + var(controls)/n )
return(tstat)
}
ttests <- replicate(1000, ttestgenerator(10))
sapply(seq(10,100,10),function(Ns){
ttests <- replicate(1000, ttestgenerator(Ns))
ps <- (seq(0,999)+0.5)/1000
qqplot(qt(ps,df=2*Ns-2),ttests,xlim=c(-10,10),ylim=c(-10,10))
abline(0,1)
})
sapply(seq(10,100,10),function(Ns){
ttests <- replicate(1000, ttestgenerator(Ns))
ps <- (seq(0,999)+0.5)/1000
qqplot(qt(ps,df=2*Ns-2),ttests,xlim=c(-10,10),ylim=c(-10,10))
abline(0,1)
})
ttestgenerator <- function(n) {
cases <- rnorm(n)
controls <- rnorm(n)
tstat <- (mean(cases)-mean(controls)) /
sqrt( var(cases)/n + var(controls)/n )
return(tstat)
}
sapply(seq(10,100,10),function(Ns){
ttests <- replicate(1000, ttestgenerator(Ns))
ps <- (seq(0,999)+0.5)/1000
qqplot(qt(ps,df=2*Ns-2),ttests,xlim=c(-10,10),ylim=c(-10,10))
abline(0,1)
})
ttestgenerator <- function(n) {
cases <- rnorm(n)
controls <- rnorm(n)
tstat <- (mean(cases)-mean(controls)) /
sqrt( var(cases)/n + var(controls)/n )
return(tstat)
}
sapply(seq(10,100,10),function(Ns){
ttests <- replicate(1000, ttestgenerator(Ns))
ps <- (seq(0,999)+0.5)/1000
qqplot(qt(ps,df=2*Ns-2),ttests,xlim=c(-10,10),ylim=c(-10,10))
abline(0,1)
})
X=rbinom(n=15,size=1,prob=0.5)
tstat <- sqrt(15)*mean(X) / sd(X)
tstat
sapply(1:1000,function(Ns){
X=rbinom(n=15,size=1,prob=0.5)
sqrt(15)*mean(X) / sd(X)})
B<-sapply(1:1000,function(Ns){
X=rbinom(n=15,size=1,prob=0.5)
sqrt(15)*mean(X) / sd(X)})
qqplot(qt(ps,df=14),B,xlim=c(-10,10),ylim=c(-10,10))
abline(0,1)
## repeat
B<-sapply(1:1000,function(Ns){
X=rbinom(n=15,size=1,prob=0.5)
sqrt(15)*mean(X) / sd(X)})
qqplot(qt(ps,df=14),B,xlim=c(-10,10),ylim=c(-10,10))
abline(0,1)
X
tstat
qqplot(qt(ps,df=14),X,xlim=c(-10,10),ylim=c(-10,10))
abline(0,1)
1-pt(2,df=4)
B=100
ps = seq(1/(B+1), 1-1/(B+1),len=B)
qt(ps,df=4)
qqplot(qt(ps,df=4),B,xlim=c(-4,4),ylim=c(-4,4))
B<-sapply(rep(5, 1000), function(n) sqrt(n)*(mean(rnorm(n)))/sd(rnorm(n)))
qqplot(qt(ps,df=4),B,xlim=c(-4,4),ylim=c(-4,4))
abline(0,1)
X
tstat <- sqrt(15)*mean(X) / sd(X)
qqplot(qt(ps,df=14),X,xlim=c(-10,10),ylim=c(-10,10))
abline(0,1)
X=rbinom(n=500,size=1,prob=0.5)
X
tstat <- sqrt(15)*mean(X) / sd(X)
tstat
X=rbinom(n=500,size=1,prob=0.5)
qqplot(qt(ps,df=499),X,xlim=c(-10,10),ylim=c(-10,10))
abline(0,1)
X=rbinom(n=500,size=1,prob=0.5)
qqplot(qt(ps,df=499),X,xlim=c(-10,10),ylim=c(-10,10))
abline(0,1)
X=rnorm(100)
summary(X)
median(X)
B<-sapply(rep(100, 1000), function(n) median(rnorm(n)))
hist(B)
qqplot(qt(ps),B,xlim=c(-10,10),ylim=c(-10,10))
qqplot(qt(ps, 99),B,xlim=c(-10,10),ylim=c(-10,10))
qqplot(qt(ps, 99),B,xlim=c(-10,10),ylim=c(-10,10))
abline(0,1)
qqplot(qt(ps, 99),B,xlim=c(-10,10),ylim=c(-10,10))
qqline(B)
qqplot(qt(ps, 99),B,xlim=c(-10,10),ylim=c(-10,10))
abline(0,1)
qqplot(rnorm(100, mean=0, sd=1/sqrt(100)),B,xlim=c(-10,10),ylim=c(-10,10))
abline(0,1)
qqplot(rnorm(100, mean=0, sd=1/sqrt(100)),B)
abline(0,1)
qqplot(rnorm(100),B)
abline(0,1)
hist(B)
qqplot(qt(ps,df=99),B)
abline(0,1)
qqplot(qt(ps,df=4),sapply(rep(5, 1000), function(n) median(rnorm(n))))
abline(0,1)
qqplot(qt(ps,df=99),B)
abline(0,1)
1/sqrt(100)
qqplot(rnorm(100, mean=0, sd=1/sqrt(100)),B)
abline(0,1)
1/sqrt(100)
qqplot(rnorm(100, mean=0, sd=0.25),B)
abline(0,1)
X=median(rnorm(500))
B<-sapply(rep(500, 1000), function(n) median(rnorm(n)))
#A)
qqplot(rnorm(500, mean=0, sd=1/sqrt(500)),B)
abline(0,1)
qqplot(rnorm(500),B)
abline(0,1)
#C)
qqplot(qt(ps,df=499),B)
abline(0,1)
qqplot(qt(ps,df=4),sapply(rep(5, 1000), function(n) median(rnorm(n))))
abline(0,1)
#D)
qqplot(rnorm(500, mean=0, sd=0.25),B)
abline(0,1)
qqplot(rnorm(500, mean=0, sd=1/sqrt(500)),B)
abline(0,1)
